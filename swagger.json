{
  "openapi": "3.0.1",
  "info": {
    "title": "Dynastic.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Dynasty": {
      "get": {
        "tags": ["Dynasty"],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GetDynastiesForUserQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dynasty"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dynasty"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dynasty"
                  }
                }
              }
            }
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Dynasty"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDynastyCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDynastyCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddDynastyCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/Dynasty/{Id}": {
      "get": {
        "tags": ["Dynasty"],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dynasty"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dynasty"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dynasty"
                }
              }
            }
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/Dynasty/{id}": {
      "put": {
        "tags": ["Dynasty"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Dynasty"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/Dynasty/{DynastyId}/Person": {
      "get": {
        "tags": ["Person"],
        "parameters": [
          {
            "name": "DynastyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Person"],
        "parameters": [
          {
            "name": "DynastyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/Dynasty/{DynastyId}/Person/{id}": {
      "get": {
        "tags": ["Person"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DynastyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Person"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DynastyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Person"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DynastyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/WeatherForecast": {
      "get": {
        "tags": ["WeatherForecast"],
        "operationId": "GetWeatherForecast",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GetWeatherForecastsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          },
          "401": {
            "description": "If Authorization header not present, has no value or no valid jwt bearer token"
          },
          "403": {
            "description": "If user not authorized to perform requested action"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddDynastyCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChildRelationship": {
        "type": "object",
        "properties": {
          "child": {
            "$ref": "#/components/schemas/Person"
          },
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "relationship": {
            "$ref": "#/components/schemas/Relationship"
          },
          "relationshipId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Dynasty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDynastiesForUserQuery": {
        "type": "object",
        "additionalProperties": false
      },
      "GetWeatherForecastsQuery": {
        "type": "object",
        "additionalProperties": false
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "middlename": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "motherId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "fatherId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildRelationship"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Relationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "personId": {
            "type": "string",
            "format": "uuid"
          },
          "partner": {
            "$ref": "#/components/schemas/Person"
          },
          "partnerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildRelationship"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://dynastic.eu.auth0.com/authorize?audience=https://dynastic-web.azurewebsites.net/",
            "scopes": {
              "openid": "Open Id",
              "email": "Email",
              "profile": "Profile"
            }
          }
        }
      }
    }
  }
}
